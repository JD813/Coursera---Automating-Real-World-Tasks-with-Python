
#!/usr/bin/env python3

import json
import locale
import sys
import reports
import emails


def load_data(filename):
  """Loads the contents of filename as a JSON file."""
  with open(filename) as json_file:
    data = json.load(json_file)
  return data


def format_car(car):
  """Given a car dictionary, returns a nicely formatted name."""
  return "{} {} ({})".format(
      car["car_make"], car["car_model"], car["car_year"])


def process_data(data):
  """Analyzes the data, looking for maximums.

  Returns a list of lines that summarize the information.
  """
  max_revenue = {"revenue": 0}
  max_sales = -1
  year_count = {}
  for item in data:
    # Calculate the revenue generated by this model (price * total_sales)
    # We need to convert the price from "$1234.56" to 1234.56
    item_price = locale.atof(item["price"].strip("$"))
    item_revenue = item["total_sales"] * item_price
    if item_revenue > max_revenue["revenue"]:
      item["revenue"] = item_revenue
      max_revenue = item
    # TODO: also handle max sales
    if item["total_sales"] >= max_sales:
      item_max_sales = item
      max_sales = item["total_sales"]
    # TODO: also handle most popular car_year
    if item["car"]["car_year"] in year_count:
      year_count[item["car"]["car_year"]] += item["total_sales"]
    else:
      year_count[item["car"]["car_year"]] = item["total_sales"]

  most_pop_year = list(year_count.keys())[0]
  for year,count in year_count.items():
    if count > year_count[most_pop_year]:
      most_pop_year = year

  summary = [
    "The {} generated the most revenue: ${}".format(
      format_car(max_revenue["car"]), max_revenue["revenue"]),
  ]
  summary += [
    "The {} had the most sales: {}".format(
      format_car(item_max_sales["car"]), item_max_sales["total_sales"])
    ]
  summary += [
    "The most popular year was {} with {} sales".format(
      most_pop_year, year_count[most_pop_year])
    ]
  return summary


def cars_dict_to_table(car_data):
  """Turns the data in car_data into a list of lists."""
  table_data = [["ID", "Car", "Price", "Total Sales"]]
  for item in car_data:
    table_data.append([item["id"], format_car(item["car"]), item["price"], item["total_sales"]])
  return table_data


def main(argv):
  """Process the JSON data and generate a full report out of it."""
  data = load_data("car_sales.json")
  summary = process_data(data)

  # TODO: turn this into a PDF report
  body = "<br/>".join(summary)
  reports.generate("/tmp/cars.pdf", "Sales summary for last month", body, cars_dict_to_table(data))

  # TODO: send the PDF report as an email attachment
  sender = "automation@example.com"
  recipient = "student-00-4f2956708250@localhost"
  subject = "Sales summary for last month"
  body = "\r\n".join(summary)
  attachment_path = "/tmp/cars.pdf"
  msg = emails.generate(sender, recipient, subject, body, attachment_path)
  emails.send(msg)

if __name__ == "__main__":
  main(sys.argv)
